#include <Key.h>
#include <Keypad.h>
#include <TA6932.h>
#define PIN_TA6932_STB   2
#define PIN_TA6932_CLK   3
#define PIN_TA6932_DIN  13
TA6932 tm(PIN_TA6932_STB, PIN_TA6932_CLK, PIN_TA6932_DIN);
char keys[4][4]={
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};
byte col[4]={7,6,5,4};//1~4行
byte row[4]={11,10,9,8};//1~4列
Keypad keypad = Keypad( makeKeymap(keys), row, col, 4, 4 );

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
    tm.begin();
    Serial.println("Started");
    //red
    tm.displayCache[0] = 0x12;
    tm.displayCache[1] = 0x01;
    tm.displayCache[2] = 0x22;
    tm.displayCache[3] = 0x20;
    tm.displayCache[4] = 0x20;
    tm.displayCache[5] = 0x22;
    tm.displayCache[6] = 0x01;
    tm.displayCache[7] = 0x12;
    //green
    tm.displayCache[8] = 0xec;
    tm.displayCache[9] = 0xfe;
    tm.displayCache[10] = 0xdc;
    tm.displayCache[11] = 0xdc;
    tm.displayCache[12] = 0xdc;
    tm.displayCache[13] = 0xdc;
    tm.displayCache[14] = 0xfe;
    tm.displayCache[15] = 0xec;
    //
    
    for( uint8_t b=0; b<8; b++){
        tm.setBrightness(b);
        delay(500);
    }
}

void loop() {
  // put your main code here, to run repeatedly:
  char input = keypad.getKey();
  if(input=='A'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0xfc;
    tm.displayCache[2] = 0x26;
    tm.displayCache[3] = 0x22;
    tm.displayCache[4] = 0x26;
    tm.displayCache[5] = 0xfc;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='B'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0xfe;
    tm.displayCache[2] = 0x92;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0x6c;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='C'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x7c;
    tm.displayCache[2] = 0xc6;
    tm.displayCache[3] = 0x82;
    tm.displayCache[4] = 0x82;
    tm.displayCache[5] = 0x82;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='D'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0xfe;
    tm.displayCache[2] = 0x82;
    tm.displayCache[3] = 0x82;
    tm.displayCache[4] = 0xc6;
    tm.displayCache[5] = 0x7c;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='0'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0xfe;
    tm.displayCache[3] = 0x82;
    tm.displayCache[4] = 0x82;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='1'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x00;
    tm.displayCache[3] = 0x82;
    tm.displayCache[4] = 0xfe;
    tm.displayCache[5] = 0x80;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='2'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0xf2;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0x9e;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='3'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x92;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='4'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x1e;
    tm.displayCache[3] = 0x10;
    tm.displayCache[4] = 0x10;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='5'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x9e;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0xf2;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='6'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0xfe;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0xf2;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='7'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x02;
    tm.displayCache[3] = 0x02;
    tm.displayCache[4] = 0x02;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='8'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0xfe;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='9'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x00;
    tm.displayCache[2] = 0x9e;
    tm.displayCache[3] = 0x92;
    tm.displayCache[4] = 0x92;
    tm.displayCache[5] = 0xfe;
    tm.displayCache[6] = 0x00;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='*'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x12;
    tm.displayCache[2] = 0x54;
    tm.displayCache[3] = 0x38;
    tm.displayCache[4] = 0x1c;
    tm.displayCache[5] = 0x2a;
    tm.displayCache[6] = 0x48;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  }
  if(input=='#'){
    tm.displayCache[0] = 0x00;
    tm.displayCache[1] = 0x24;
    tm.displayCache[2] = 0x7e;
    tm.displayCache[3] = 0x24;
    tm.displayCache[4] = 0x24;
    tm.displayCache[5] = 0x7e;
    tm.displayCache[6] = 0x24;
    tm.displayCache[7] = 0x00;

    tm.displayCache[8] = 0x00;
    tm.displayCache[9] = 0x00;
    tm.displayCache[10] = 0x00;
    tm.displayCache[11] = 0x00;
    tm.displayCache[12] = 0x00;
    tm.displayCache[13] = 0x00;
    tm.displayCache[14] = 0x00;
    tm.displayCache[15] = 0x00;
    for( uint8_t b=0; b<8; b++){
    tm.setBrightness(b);
    delay(100);
    }
  } 
}
